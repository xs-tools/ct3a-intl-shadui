import "@/styles/globals.css";

import { Inter as FontSans } from "next/font/google";
import { TRPCReactProvider } from "@/trpc/react";
import { cn } from "@/lib/utils";
import { getMessages, getTranslations } from "next-intl/server";
import { NextIntlClientProvider } from "next-intl";
import { Iconify } from "@/components/iconify";
import { Button } from "@/components/ui/button";
import Link from "next/link";

const fontSans = FontSans({
  subsets: ["latin"],
  variable: "--font-sans",
});

export const metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default async function LocaleLayout({
  children,
  params: { locale },
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {
  const messages = await getMessages();

  const t = await getTranslations({ locale, namespace: "Menu" });

  // @ts-ignore
  const menu = [0, 1, 2].map((item: number) => {
    return (
      <Button key={item} variant="ghost" asChild>
        {/* @ts-ignore */}
        <Link href={`/${locale}${t(`a${item}.url`)}`}>
          {/* @ts-ignore */}
          {t(`a${item}.name`)}
        </Link>
      </Button>
    );
  });

  return (
    <html
      lang={locale}
      className={cn(
        "min-h-screen bg-background font-sans antialiased",
        fontSans.variable,
      )}
      suppressHydrationWarning
    >
      <body>
        <TRPCReactProvider>
          <NextIntlClientProvider messages={messages}>
            <header className="h-16 border border-border bg-background/90">
              <div className="container flex h-full justify-between">
                {/* left */}
                <div className="w-48 cursor-pointer text-xl font-bold uppercase">
                  <Link
                    href={`/${locale}`}
                    className="flex h-full items-center"
                  >
                    <Iconify
                      fontSize={36}
                      className="mr-2"
                      icon="pepicons-pencil:swords"
                    />
                    xs.tool
                  </Link>
                </div>

                {/* center */}
                <div className="flex flex-1 items-center justify-center gap-4">
                  {menu}
                </div>

                {/* right */}
                <div className="flex w-48 items-center">right</div>
              </div>
            </header>

            {children}
          </NextIntlClientProvider>
        </TRPCReactProvider>
      </body>
    </html>
  );
}
